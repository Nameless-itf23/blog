---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import ContentLayout from "@layouts/ContentLayout.astro";
import PostWrapper from "@components/PostWrapper.astro";
import Toc from "@components/toc/Toc.astro";
import Tags from "@components/Tags.astro";
import Nerd from "src/components/nerd/Nerd.astro";
import { extractPlainText } from "@utils/textExtractor";
import { PROFILE, SNS_LINKS } from "src/consts";
import profileIcon from "@assets/profileIcon.png";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post: any) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

export type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;

const { Content, headings } = await post.render();
---

<ContentLayout pageName={post.data.title} description={extractPlainText(post.body)}>
  <div class="page">
    <div class="content">
      <div class="post">
        <div class="titleBlock">
          <div class="dateInfo">
            <time datetime={post.data.createdAt.toISOString()}>
              <span class="material-symbols-outlined">schedule</span>
              <p>{new Intl.DateTimeFormat("ja-JP").format(post.data.createdAt)}</p>
            </time>
            {
              post.data.updatedAt && (
                <time datetime={post.data.updatedAt.toISOString()}>
                  <span class="material-symbols-outlined">refresh</span>
                  <p>{new Intl.DateTimeFormat("ja-JP").format(post.data.updatedAt)}</p>
                </time>
              )
            }
          </div>
          <div class="postTitleWrapper">
            <p class="postTitle">{post.data.title}</p>
          </div>
          <div class="tags">
            <Tags tags={post.data.tags} />
          </div>
        </div>
        <PostWrapper>
          <Content />
        </PostWrapper>
      </div>
      <div class="infomation">
        <div class="profile">
          <div class="profileHeading">
            <Image class="profileIcon" src={profileIcon} alt="profile icon" />
            <p class="name">{PROFILE.name}</p>
          </div>
          <p class="introduction">{PROFILE.introduction}</p>
          <div class="snsLinks">
            {
              Object.entries(SNS_LINKS).map(([name, link]) => (
                <a href={link} class="snsLink">
                  <Nerd iconName={name} />
                </a>
              ))
            }
          </div>
        </div>
        <div class="toc">
          <p class="tocTitle">目次</p>
          <Toc headings={headings} />
        </div>
      </div>
    </div>
  </div>
</ContentLayout>

<style lang="scss">
  @use "@styles/basePalette.scss";

  .page {
    background-color: basePalette.$lightWhite;

    & > .content {
      display: flex;
      flex-direction: row;
      justify-content: center;
      gap: 50px;
      padding: 40px;

      & > .post {
        flex: 1;
        max-width: 900px;
        border: 1px solid basePalette.$whiteGray;
        padding: 32px 50px 40px 50px;
        border-radius: 8px;
        background-color: basePalette.$white;

        & > .titleBlock {
          display: flex;
          flex-direction: column;
          gap: 60px;

          & .dateInfo {
            display: flex;
            flex-direction: row;
            gap: 16px;

            & > time {
              display: flex inline;
              flex-direction: row;
              align-items: center;
              gap: 6px;
              color: basePalette.$gray;
              font-size: 16px;

              & > .material-symbols-outlined {
                font-size: 16px;
              }
            }
          }

          & > .postTitleWrapper {
            display: flex;
            justify-content: center;

            & > .postTitle {
              font-size: 30px;
              font-weight: 600;
              color: basePalette.$black;
            }
          }

          & .tags {
            display: flex;
            justify-content: center;
          }
        }
      }

      & > .infomation {
        display: flex;
        flex-direction: column;
        gap: 24px;

        & > .profile {
          width: 270px;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          gap: 24px;
          padding: 30px 30px 45px 30px;
          border-radius: 8px;
          border: 1px solid basePalette.$whiteGray;
          background-color: basePalette.$white;

          & > .profileHeading {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;

            & > .profileIcon {
              width: 64px;
              height: 64px;
              border-radius: 32px;
            }

            & > .name {
              color: basePalette.$gray;
              font-size: 22px;
              font-weight: 600;
            }
          }

          & > .introduction {
            color: basePalette.$gray;
            font-size: 14px;
          }

          & > .snsLinks {
            display: flex;
            flex-direction: row;
            gap: 8px;
            align-items: center;

            & > .snsLink {
              display: flex;
              justify-content: center;
              align-items: center;
              font-size: 20px;
            }
          }
        }

        & > .toc {
          position: sticky;
          top: 20px;
          width: 270px;
          display: flex;
          flex-direction: column;
          gap: 8px;
          padding: 20px;
          border-radius: 8px;
          border: 1px solid basePalette.$whiteGray;
          background-color: basePalette.$white;

          & > .tocTitle {
            font-size: 16px;
            font-weight: 700;
            color: basePalette.$gray;
          }
        }
      }
    }
  }

  @media screen and (max-width: 950px) {
    .page {
      & > .content {
        padding: 30px 15px 15px 15px;

        & > .post {
          & > .titleBlock {
            & > .postTitleWrapper {
              & > .postTitle {
                font-size: 27px;
              }
            }
          }
        }

        & > .infomation {
          display: none;
        }
      }
    }
  }

  @media screen and (max-width: 600px) {
    .page {
      & > .content {
        padding: 30px 0 0 0;

        & > .post {
          padding: 20px;

          & > .titleBlock {
            & > .postTitleWrapper {
              & > .postTitle {
                font-size: 22px;
              }
            }
          }
        }
      }
    }
  }
</style>
